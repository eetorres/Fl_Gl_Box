// generated by Fast Light User Interface Designer (fluid) version 1.0106

#include "fl_class_win.h"

inline void fl_clase_win::cb_Close_i(Fl_Button*, void*) {
  close();
}
void fl_clase_win::cb_Close(Fl_Button* o, void* v) {
  ((fl_clase_win*)(o->parent()->user_data()))->cb_Close_i(o,v);
}

inline void fl_clase_win::cb_Icono_i(Fl_Button*, void*) {
  icono();
}
void fl_clase_win::cb_Icono(Fl_Button* o, void* v) {
  ((fl_clase_win*)(o->parent()->user_data()))->cb_Icono_i(o,v);
}

inline void fl_clase_win::cb_Draw_i(Fl_Button*, void*) {
  my_gl->valid_data(1);
my_gl->redraw();
}
void fl_clase_win::cb_Draw(Fl_Button* o, void* v) {
  ((fl_clase_win*)(o->parent()->user_data()))->cb_Draw_i(o,v);
}

inline void fl_clase_win::cb__slide_i(Fl_Slider*, void*) {
  my_gl->Zoom((double)_slide->value());
my_gl->redraw();
}
void fl_clase_win::cb__slide(Fl_Slider* o, void* v) {
  ((fl_clase_win*)(o->parent()->user_data()))->cb__slide_i(o,v);
}

fl_clase_win::fl_clase_win() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = my_win = new Fl_Double_Window(332, 142, "Fl_Window - with Fl_Gl_Box");
    w = o;
    o->color((Fl_Color)147);
    o->user_data((void*)(this));
    { Fl_Button* o = new Fl_Button(20, 41, 110, 18, "Close");
      o->callback((Fl_Callback*)cb_Close);
    }
    { Fl_Button* o = new Fl_Button(20, 19, 110, 20, "Icono");
      o->down_box(FL_DOWN_BOX);
      o->callback((Fl_Callback*)cb_Icono);
    }
    { Fl_Button* o = new Fl_Button(20, 62, 110, 20, "Draw");
      o->callback((Fl_Callback*)cb_Draw);
    }
    { Fl_Gl_Box* o = my_gl = new Fl_Gl_Box(160, 5, 145, 85, "Fl_Gl_Box");
      o->box(FL_THIN_DOWN_BOX);
      o->color(FL_FOREGROUND_COLOR);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor((Fl_Color)2);
      o->align(FL_ALIGN_CENTER);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Slider* o = _slide = new Fl_Slider(25, 120, 290, 15);
      o->type(1);
      o->step(0.01);
      o->value(1);
      o->callback((Fl_Callback*)cb__slide);
    }
    o->end();
  }
}

void fl_clase_win::close() {
  my_win->hide();
}

void fl_clase_win::show() {
  my_win->show();
}

void fl_clase_win::icono() {
  my_win->iconize();
}
